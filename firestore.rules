service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return (request.auth.uid != null)
    }

    function getRole() {
      return resource.data.roles[request.auth.uid];
    }

    function isOneOfRoles(array) {
      return isSignedIn() && (getRole() in array);
    }

    function isValidRecipe() {
      return request.resource.data.roles[request.auth.uid] == 'owner';
    }

    function onlyContentChanged() {
      // Ensure that title and roles are unchanged and that no new
      // fields are added to the document.
      return request.resource.data.name == resource.data.name
        && request.resource.data.roles == resource.data.roles
        && request.resource.data.keys() == resource.data.keys();
    }



    match /recipes/{recipe} {
      allow delete: if isOneOfRoles(['owner']);
      allow update: if isOneOfRoles(['owner'])
        || (isOneOfRoles(['writer']) && onlyContentChanged());
      allow create: if isOneOfRoles(['owner']) && isValidRecipe();
      allow read: if isOneOfRoles(['owner', 'reader']);




    }



  }
}

